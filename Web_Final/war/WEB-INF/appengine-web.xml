<?xml version="1.0" encoding="utf-8"?>
<appengine-web-app xmlns="http://appengine.google.com/ns/1.0">
  <application>dndwebsitecreator</application>
  <version>27</version>

  <!--
    By default, App Engine sends requests serially to a given web server.
    To allow App Engine to send multiple requests in parallel specify:

      <threadsafe>true</threadsafe>
  -->
  
  <threadsafe>false</threadsafe>

  <!-- Configure serving/caching of GWT files -->
  <static-files>
    
    <include path="**" />

    <!-- The following line requires App Engine 1.3.2 SDK -->
    <include path="**.nocache.*" expiration="0s" />

    <include path="**.cache.*" expiration="365d" />
    
    <exclude path="**.gwt.rpc" />
    
        <!-- Exclude smartgwt files from the list of static files -->
    <exclude path="/sc/**" />
    <exclude path="/web_final/sc/**" />
	
  </static-files>

  <!-- Configure java.util.logging -->
  <system-properties>
    <property name="java.util.logging.config.file" value="WEB-INF/logging.properties"/>
  </system-properties>

  <!--
    HTTP Sessions are disabled by default. To enable HTTP sessions specify:

      <sessions-enabled>true</sessions-enabled>

    It's possible to reduce request latency by configuring your application to
    asynchronously write HTTP session data to the datastore:

      <async-session-persistence enabled="true" />

    With this feature enabled, there is a very small chance your app will see
    stale session data. For details, see
    http://code.google.com/appengine/docs/java/config/appconfig.html#Enabling_Sessions
  -->
  <sessions-enabled>true</sessions-enabled>
  
  
  <!-- By default all WAR files are also resource files including WEB-INF -->
<!-- This overrides the default -->
<resource-files>
    <!-- Exclude smartgwt files from the list of resource files -->
    <exclude path="/sc/**" />
    <exclude path="/web_final/sc/**" />
</resource-files>

</appengine-web-app>
